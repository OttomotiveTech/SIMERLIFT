#ifndef LC_PROT_LCFU___CHARGESTATE__H
#define LC_PROT_LCFU___CHARGESTATE__H

#include <LC3CGBase.h>
#include <lcfu_iec61131__ABS.h>
#include <lcfu_iec61131__TOF.h>
#include <lcfu_iec61131__TON.h>

/*                            Typedefs                         */
typedef struct _LC_TD_FunctionBlock_CHARGESTATE
{
  LC_TD_BOOL LC_VD_CHARGEON;
  LC_TD_BOOL LC_VD_MAINCOMPLETE;
  LC_TD_UDINT LC_VD_BALDIFF;
  LC_TD_UDINT LC_VD_MAXCELL;
  LC_TD_UDINT LC_VD_MINCELL;
  LC_TD_REAL LC_VD_BALAMPR;
  LC_TD_REAL LC_VD_BATTAMPR;
  LC_TD_REAL LC_VD_DMCC;
  LC_TD_BOOL LC_VD_BALANCE;
  LC_TD_BOOL LC_VD_COMPLETE;
  LC_TD_BOOL LC_VD_ENO;
  LC_TD_USINT LC_VD_CHSTATE;
  LC_TD_REAL LC_VD_CHARGEAMPR;
  LC_TD_BOOL LC_VD_AMPERLOW;
  LC_TD_BOOL LC_VD_AMPERLOW_MID;
  LC_TD_BOOL LC_VD_BALANCEOK;
  LC_TD_BOOL LC_VD_BALANCEOK_MID;
  LC_TD_BOOL LC_VD_CHARGESTATETIMEOUT;
  LC_TD_USINT LC_VD_PREVSTATE;
  LC_TD_USINT LC_VD_STATE;
  LC_TD_UDINT LC_VD_BALDIFFTOL;
  LC_TD_TIME LC_VD_CHARGEINTERVAL;
  LC_TD_TIME LC_VD_CHARGESTATEELAPSEDTIME;
  LC_TD_FunctionBlock_TON LC_VD_AMPERTIMERHIGH;
  LC_TD_FunctionBlock_TOF LC_VD_AMPERTIMERLOW;
  LC_TD_FunctionBlock_TON LC_VD_BALANCETIMERHIGH;
  LC_TD_FunctionBlock_TOF LC_VD_BALANCETIMERLOW;
  LC_TD_FunctionBlock_TON LC_VD_CHARGETIMER;
} LCCG_StructAttrib LC_TD_FunctionBlock_CHARGESTATE;

/*                   ColdBoot Initialization Macro             */
#define LC_INIT_FunctionBlock_CHARGESTATE(p) \
{ \
  LC_INIT_BOOL(&((p)->LC_VD_CHARGEON)); \
  LC_INIT_BOOL(&((p)->LC_VD_MAINCOMPLETE)); \
  LC_INIT_REAL(&((p)->LC_VD_DMCC)); \
  LC_INIT_REAL(&((p)->LC_VD_BATTAMPR)); \
  LC_INIT_REAL(&((p)->LC_VD_BALAMPR)); \
  LC_INIT_UDINT(&((p)->LC_VD_BALDIFF)); \
  LC_INIT_UDINT(&((p)->LC_VD_MAXCELL)); \
  LC_INIT_UDINT(&((p)->LC_VD_MINCELL)); \
  LC_INIT_BOOL(&((p)->LC_VD_COMPLETE)); \
  LC_INIT_BOOL(&((p)->LC_VD_BALANCE)); \
  LC_INIT_REAL(&((p)->LC_VD_CHARGEAMPR)); \
  LC_INIT_USINT(&((p)->LC_VD_CHSTATE)); \
  LC_INIT_UDINT(&((p)->LC_VD_BALDIFFTOL)); \
  LC_INIT_BOOL(&((p)->LC_VD_BALANCEOK_MID)); \
  LC_INIT_BOOL(&((p)->LC_VD_BALANCEOK)); \
  LC_INIT_FunctionBlock_TON(&((p)->LC_VD_BALANCETIMERHIGH)); \
  LC_INIT_FunctionBlock_TOF(&((p)->LC_VD_BALANCETIMERLOW)); \
  LC_INIT_BOOL(&((p)->LC_VD_AMPERLOW_MID)); \
  LC_INIT_BOOL(&((p)->LC_VD_AMPERLOW)); \
  LC_INIT_FunctionBlock_TON(&((p)->LC_VD_AMPERTIMERHIGH)); \
  LC_INIT_FunctionBlock_TOF(&((p)->LC_VD_AMPERTIMERLOW)); \
  (p)->LC_VD_PREVSTATE = (LC_TD_USINT)0; \
  LC_INIT_USINT(&((p)->LC_VD_STATE)); \
  LC_INIT_FunctionBlock_TON(&((p)->LC_VD_CHARGETIMER)); \
  (p)->LC_VD_CHARGEINTERVAL = LC_TIME_VALUE(RT_CC_CONST_LL(1),RT_CC_CONST_LL(0)); \
  LC_INIT_BOOL(&((p)->LC_VD_CHARGESTATETIMEOUT)); \
  LC_INIT_TIME(&((p)->LC_VD_CHARGESTATEELAPSEDTIME)); \
}

/*                   WarmBoot Initialization Macro             */
#define LC_WINIT_FunctionBlock_CHARGESTATE(p,RF) \
{ \
  LC_WINIT_BOOL(&((p)->LC_VD_CHARGEON),RF); \
  LC_WINIT_BOOL(&((p)->LC_VD_MAINCOMPLETE),RF); \
  LC_WINIT_REAL(&((p)->LC_VD_DMCC),RF); \
  LC_WINIT_REAL(&((p)->LC_VD_BATTAMPR),RF); \
  LC_WINIT_REAL(&((p)->LC_VD_BALAMPR),RF); \
  LC_WINIT_UDINT(&((p)->LC_VD_BALDIFF),RF); \
  LC_WINIT_UDINT(&((p)->LC_VD_MAXCELL),RF); \
  LC_WINIT_UDINT(&((p)->LC_VD_MINCELL),RF); \
  LC_WINIT_BOOL(&((p)->LC_VD_COMPLETE),RF); \
  LC_WINIT_BOOL(&((p)->LC_VD_BALANCE),RF); \
  LC_WINIT_REAL(&((p)->LC_VD_CHARGEAMPR),RF); \
  LC_WINIT_USINT(&((p)->LC_VD_CHSTATE),RF); \
  LC_WINIT_UDINT(&((p)->LC_VD_BALDIFFTOL),RF); \
  LC_WINIT_BOOL(&((p)->LC_VD_BALANCEOK_MID),RF); \
  LC_WINIT_BOOL(&((p)->LC_VD_BALANCEOK),RF); \
  LC_WINIT_FunctionBlock_TON(&((p)->LC_VD_BALANCETIMERHIGH),0); \
  LC_WINIT_FunctionBlock_TOF(&((p)->LC_VD_BALANCETIMERLOW),0); \
  LC_WINIT_BOOL(&((p)->LC_VD_AMPERLOW_MID),RF); \
  LC_WINIT_BOOL(&((p)->LC_VD_AMPERLOW),RF); \
  LC_WINIT_FunctionBlock_TON(&((p)->LC_VD_AMPERTIMERHIGH),0); \
  LC_WINIT_FunctionBlock_TOF(&((p)->LC_VD_AMPERTIMERLOW),0); \
  if (RF==0) (p)->LC_VD_PREVSTATE = (LC_TD_USINT)0; \
  LC_WINIT_USINT(&((p)->LC_VD_STATE),RF); \
  LC_WINIT_FunctionBlock_TON(&((p)->LC_VD_CHARGETIMER),0); \
  if (RF==0) (p)->LC_VD_CHARGEINTERVAL = LC_TIME_VALUE(RT_CC_CONST_LL(1),RT_CC_CONST_LL(0)); \
  LC_WINIT_BOOL(&((p)->LC_VD_CHARGESTATETIMEOUT),RF); \
  LC_WINIT_TIME(&((p)->LC_VD_CHARGESTATEELAPSEDTIME),RF); \
}

/*                            Prototype                        */
void  lcfu___CHARGESTATE(LC_TD_FunctionBlock_CHARGESTATE* LC_this, struct _lcoplck_epdb_1_impl* pEPDB);


#endif
