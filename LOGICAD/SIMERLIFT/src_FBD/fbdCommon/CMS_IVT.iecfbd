FUNCTION_BLOCK CMS_IVT
  {
    Current_mA {index := 0};
    Voltage1_mV {index := 1};
    Voltage2_mV {index := 2};
    Voltage3_mV {index := 3};
    Temp {index := 5};
    Power_kWh {index := 6};
    Current_Counter_Ah {index := 8};
    Power_Counter_Wh {index := 9};
    CMS_Error {index := 12};
    CAN_Error {index := 13};
    Overall_Power_kWh {index := 10};
    width := 300;
    height := 278;
  }

  VAR
    CANRECV1 : CANRECV;
    CANRECV2 : CANRECV;
    CANRECV3 : CANRECV;
    CANRECV4 : CANRECV;
    CANRECV5 : CANRECV;
    CANRECV6 : CANRECV;
    CANRECV7 : CANRECV;
    CANRECV8 : CANRECV;
    Error_521 : BOOL := 0;
    Error_522 : BOOL := 0;
    Error_523 : BOOL := 0;
    Error_524 : BOOL := 0;
    Error_525 : BOOL := 0;
    Error_526 : BOOL := 0;
    Error_527 : BOOL := 0;
    Error_528 : BOOL := 0;
    TON1 : TON;
    CANRECV9 : CANRECV;
    CANSEND1 : CANSEND;
  END_VAR
  VAR_INPUT
    CAN_CH : UDINT := 0;
  END_VAR
  VAR_OUTPUT
    Current_mA : REAL := 0;
    Voltage1_mV : REAL := 0;
    Voltage2_mV : REAL := 0;
    Voltage3_mV : REAL := 0;
    Temp : REAL := 0;
    Power_kWh : REAL := 0;
    Current_Counter_Ah : REAL := 0;
    Power_Counter_Wh : REAL := 0;
    CMS_Error : BOOL := 0;
    CAN_Error : BOOL := 0;
    Overall_Power_kWh : LREAL := 0;
  END_VAR

  (*

    // Network 1:
    CANRECV1(CH := CAN_CH, ID := 16#521, FMT := CAN_FORMAT#STANDARD, PER := T#200ms, ENB := 1);
    RBIT(start := 16, len := 32, INbit := CANRECV1.DATA, OUTbit => @C(54).OUTbit);
    TO_DINT(IN := @C(54).OUTbit, TO_DINT => @C(169).TO_DINT);
    FROM_BIG_ENDIAN(IN := @C(169).TO_DINT, FROM_BIG_ENDIAN => @C(349).FROM_BIG_ENDIAN);
    TO_REAL(IN := @C(349).FROM_BIG_ENDIAN, TO_REAL => Current_mA);
    RBIT(start := 14, len := 2, INbit := CANRECV1.DATA, OUTbit => @C(61).OUTbit);
    NE(IN1 := @C(61).OUTbit, IN2 := 0, NE => Error_521);
    NE(IN1 := CANRECV1.RC, IN2 := 0, NE => @C(113).NE);
    CANRECV2(CH := CAN_CH, ID := 16#522, FMT := CAN_FORMAT#STANDARD, PER := T#200ms, ENB := 1);
    RBIT(start := 16, len := 32, INbit := CANRECV2.DATA, OUTbit => @C(12).OUTbit);
    TO_DINT(IN := @C(12).OUTbit, TO_DINT => @C(171).TO_DINT);
    FROM_BIG_ENDIAN(IN := @C(171).TO_DINT, FROM_BIG_ENDIAN => @C(188).FROM_BIG_ENDIAN);
    TO_REAL(IN := @C(188).FROM_BIG_ENDIAN, TO_REAL => Voltage1_mV);
    RBIT(start := 14, len := 2, INbit := CANRECV2.DATA, OUTbit => @C(31).OUTbit);
    NE(IN1 := @C(31).OUTbit, IN2 := 0, NE => Error_522);
    NE(IN1 := CANRECV2.RC, IN2 := 0, NE => @C(4).NE);
    CANRECV4(CH := CAN_CH, ID := 16#523, FMT := CAN_FORMAT#STANDARD, PER := T#200ms, ENB := 1);
    RBIT(start := 16, len := 32, INbit := CANRECV4.DATA, OUTbit => @C(32).OUTbit);
    TO_DINT(IN := @C(32).OUTbit, TO_DINT => @C(173).TO_DINT);
    FROM_BIG_ENDIAN(IN := @C(173).TO_DINT, FROM_BIG_ENDIAN => @C(224).FROM_BIG_ENDIAN);
    TO_REAL(IN := @C(224).FROM_BIG_ENDIAN, TO_REAL => Voltage2_mV);
    RBIT(start := 14, len := 2, INbit := CANRECV4.DATA, OUTbit => @C(38).OUTbit);
    NE(IN1 := @C(38).OUTbit, IN2 := 0, NE => Error_523);
    NE(IN1 := CANRECV4.RC, IN2 := 0, NE => @C(65).NE);
    CANRECV3(CH := CAN_CH, ID := 16#524, FMT := CAN_FORMAT#STANDARD, PER := T#200ms, ENB := 1);
    RBIT(start := 16, len := 32, INbit := CANRECV3.DATA, OUTbit => @C(34).OUTbit);
    TO_DINT(IN := @C(34).OUTbit, TO_DINT => @C(175).TO_DINT);
    FROM_BIG_ENDIAN(IN := @C(175).TO_DINT, FROM_BIG_ENDIAN => @C(231).FROM_BIG_ENDIAN);
    TO_REAL(IN := @C(231).FROM_BIG_ENDIAN, TO_REAL => Voltage3_mV);
    RBIT(start := 14, len := 2, INbit := CANRECV3.DATA, OUTbit => @C(62).OUTbit);
    NE(IN1 := @C(62).OUTbit, IN2 := 0, NE => Error_524);
    NE(IN1 := CANRECV3.RC, IN2 := 0, NE => @C(59).NE);
    CANRECV8(CH := CAN_CH, ID := 16#525, FMT := CAN_FORMAT#STANDARD, PER := T#1s, ENB := 1);
    RBIT(start := 16, len := 32, INbit := CANRECV8.DATA, OUTbit => @C(63).OUTbit);
    TO_DINT(IN := @C(63).OUTbit, TO_DINT => @C(177).TO_DINT);
    FROM_BIG_ENDIAN(IN := @C(177).TO_DINT, FROM_BIG_ENDIAN => @C(353).FROM_BIG_ENDIAN);
    TO_REAL(IN := @C(353).FROM_BIG_ENDIAN, TO_REAL => @C(220).TO_REAL);
    DIV(IN1 := @C(220).TO_REAL, IN2 := 10, DIV => Temp);
    RBIT(start := 14, len := 2, INbit := CANRECV8.DATA, OUTbit => @C(64).OUTbit);
    NE(IN1 := @C(64).OUTbit, IN2 := 0, NE => Error_525);
    NE(IN1 := CANRECV8.RC, IN2 := 0, NE => @C(33).NE);
    CANRECV7(CH := CAN_CH, ID := 16#526, FMT := CAN_FORMAT#STANDARD, PER := T#1s, ENB := 1);
    RBIT(start := 16, len := 32, INbit := CANRECV7.DATA, OUTbit => @C(79).OUTbit);
    TO_DINT(IN := @C(79).OUTbit, TO_DINT => @C(179).TO_DINT);
    FROM_BIG_ENDIAN(IN := @C(179).TO_DINT, FROM_BIG_ENDIAN => @C(356).FROM_BIG_ENDIAN);
    TO_REAL(IN := @C(356).FROM_BIG_ENDIAN, TO_REAL => @C(226).TO_REAL);
    DIV(IN1 := @C(226).TO_REAL, IN2 := 1000, DIV => Power_kWh);
    RBIT(start := 14, len := 2, INbit := CANRECV7.DATA, OUTbit => @C(80).OUTbit);
    NE(IN1 := @C(80).OUTbit, IN2 := 0, NE => Error_526);
    NE(IN1 := CANRECV7.RC, IN2 := 0, NE => @C(365).NE);
    CANRECV6(CH := CAN_CH, ID := 16#527, FMT := CAN_FORMAT#STANDARD, PER := T#200ms, ENB := 1);
    RBIT(start := 16, len := 32, INbit := CANRECV6.DATA, OUTbit => @C(84).OUTbit);
    TO_DINT(IN := @C(84).OUTbit, TO_DINT => @C(181).TO_DINT);
    FROM_BIG_ENDIAN(IN := @C(181).TO_DINT, FROM_BIG_ENDIAN => @C(359).FROM_BIG_ENDIAN);
    TO_REAL(IN := @C(359).FROM_BIG_ENDIAN, TO_REAL => @C(228).TO_REAL);
    DIV(IN1 := @C(228).TO_REAL, IN2 := 3600, DIV => Current_Counter_Ah);
    RBIT(start := 14, len := 2, INbit := CANRECV6.DATA, OUTbit => @C(89).OUTbit);
    NE(IN1 := @C(89).OUTbit, IN2 := 0, NE => Error_527);
    NE(IN1 := CANRECV6.RC, IN2 := 0, NE => @C(82).NE);
    CANRECV5(CH := CAN_CH, ID := 16#528, FMT := CAN_FORMAT#STANDARD, PER := T#200ms, ENB := 1);
    RBIT(start := 16, len := 32, INbit := CANRECV5.DATA, OUTbit => @C(81).OUTbit);
    TO_DINT(IN := @C(81).OUTbit, TO_DINT => @C(183).TO_DINT);
    FROM_BIG_ENDIAN(IN := @C(183).TO_DINT, FROM_BIG_ENDIAN => @C(362).FROM_BIG_ENDIAN);
    TO_REAL(IN := @C(362).FROM_BIG_ENDIAN, TO_REAL => Power_Counter_Wh);
    RBIT(start := 14, len := 2, INbit := CANRECV5.DATA, OUTbit => @C(92).OUTbit);
    NE(IN1 := @C(92).OUTbit, IN2 := 0, NE => Error_528);
    NE(IN1 := CANRECV5.RC, IN2 := 0, NE => @C(132).NE);
    OR(IN1 := @C(113).NE, IN2 := @C(4).NE, IN3 := @C(65).NE, IN4 := @C(59).NE, IN5 := @C(33).NE, IN6 := @C(365).NE, IN7 := @C(82).NE, IN8 := @C(132).NE, OR => CAN_Error);

    // Network 2:
    OR(IN1 := Error_521, IN2 := Error_522, IN3 := Error_523, IN4 := Error_524, IN5 := Error_525, IN6 := Error_526, IN7 := Error_527, IN8 := Error_528, OR => @C(327).OR);
    TON1(IN := @C(327).OR, PT := T#500ms, Q => CMS_Error);

    // Network 3:
    WBIT(start := 0, len := 8, INbit := 16#42, OUTbit => @C(332).OUTbit);
    WBIT(start := 8, len := 8, INbit := 16#06, OUTbit => @C(334).OUTbit);
    OR(IN1 := @C(332).OUTbit, IN2 := @C(334).OUTbit, OR => @C(407).OR);
    CANSEND1(CH := CAN_CH, ID := 16#411, FMT := CAN_FORMAT#STANDARD, DATA := @C(407).OR, DLC := 2, PER := T#1s, ENB := 1);

    // Network 4:
    CANRECV9(CH := CAN_CH, ID := 16#511, FMT := CAN_FORMAT#STANDARD, PER := T#100ms, ENB := 1);
    FROM_BIG_ENDIAN(IN := CANRECV9.DATA, FROM_BIG_ENDIAN => @C(455).FROM_BIG_ENDIAN);
    RBIT(start := 0, len := 48, INbit := @C(455).FROM_BIG_ENDIAN, OUTbit => @C(394).OUTbit);
    TO_LREAL(IN := @C(394).OUTbit, TO_LREAL => @C(454).TO_LREAL);
    DIV(IN1 := @C(454).TO_LREAL, IN2 := 1000, DIV => Overall_Power_kWh);

  *)

  @C(1) : @FB(CANRECV1), @R(360.0, 40.0, 120.0, 98.0), @I(@N(CH), @L(9.5)), @I(@N(ID), @L(29.5)), @I(@N(FMT), @L(49.5)), @I(@N(PER), @L(69.5)), @I(@N(ENB), @L(89.5)), @O(@N(CRX), @R(9.5)), @O(@N(DATA), @R(29.5)), @O(@N(DLC), @R(49.5)), @O(@N(MPER), @R(69.5)), @O(@N(RC), @R(89.5));
  @VF(18) : @E(T#200ms), @R(130.0, 100.0, 110.0, 19.0);
  @VF(66) : @E(1), @R(130.0, 120.0, 110.0, 19.0), BOOL;
  @VF(115) : @E(0), @R(370.0, 140.0, 110.0, 19.0), UINT;
  @VF(57) : @E(32), @R(710.0, 40.0, 110.0, 19.0), INT;
  @VF(56) : @E(16), @R(710.0, 20.0, 110.0, 19.0), INT;
  @VF(10) : @E(CAN_FORMAT#STANDARD), @R(20.0, 80.0, 220.0, 19.0);
  @VF(11) : @E(16#521), @R(130.0, 60.0, 110.0, 19.0), UDINT;
  @C(8) : @FB(CANRECV2), @R(360.0, 180.0, 120.0, 98.0), @I(@N(CH), @L(9.5)), @I(@N(ID), @L(29.5)), @I(@N(FMT), @L(49.5)), @I(@N(PER), @L(69.5)), @I(@N(ENB), @L(89.5)), @O(@N(CRX), @R(9.5)), @O(@N(DATA), @R(29.5)), @O(@N(DLC), @R(49.5)), @O(@N(MPER), @R(69.5)), @O(@N(RC), @R(89.5));
  @VF(13) : @E(0), @R(370.0, 280.0, 110.0, 19.0), UINT;
  @VF(14) : @E(1), @R(130.0, 260.0, 110.0, 19.0), BOOL;
  @VF(15) : @E(T#200ms), @R(130.0, 240.0, 110.0, 19.0);
  @VF(16) : @E(16#522), @R(130.0, 200.0, 110.0, 19.0), UDINT;
  @VF(20) : @E(32), @R(710.0, 180.0, 110.0, 19.0), INT;
  @VF(21) : @E(16), @R(710.0, 160.0, 110.0, 19.0), INT;
  @C(36) : @FB(CANRECV3), @R(360.0, 460.0, 120.0, 98.0), @I(@N(CH), @L(9.5)), @I(@N(ID), @L(29.5)), @I(@N(FMT), @L(49.5)), @I(@N(PER), @L(69.5)), @I(@N(ENB), @L(89.5)), @O(@N(CRX), @R(9.5)), @O(@N(DATA), @R(29.5)), @O(@N(DLC), @R(49.5)), @O(@N(MPER), @R(69.5)), @O(@N(RC), @R(89.5));
  @C(37) : @FB(CANRECV4), @R(360.0, 320.0, 120.0, 98.0), @I(@N(CH), @L(9.5)), @I(@N(ID), @L(29.5)), @I(@N(FMT), @L(49.5)), @I(@N(PER), @L(69.5)), @I(@N(ENB), @L(89.5)), @O(@N(CRX), @R(9.5)), @O(@N(DATA), @R(29.5)), @O(@N(DLC), @R(49.5)), @O(@N(MPER), @R(69.5)), @O(@N(RC), @R(89.5));
  @VF(39) : @E(32), @R(710.0, 460.0, 110.0, 19.0), INT;
  @VF(40) : @E(16), @R(710.0, 440.0, 110.0, 19.0), INT;
  @VF(41) : @E(0), @R(370.0, 420.0, 110.0, 19.0), UINT;
  @VF(42) : @E(0), @R(370.0, 560.0, 110.0, 19.0), UINT;
  @VF(43) : @E(T#200ms), @R(130.0, 380.0, 110.0, 19.0);
  @VF(44) : @E(1), @R(130.0, 400.0, 110.0, 19.0), BOOL;
  @VF(45) : @E(16#523), @R(130.0, 340.0, 110.0, 19.0), UDINT;
  @VF(46) : @E(1), @R(130.0, 540.0, 110.0, 19.0), BOOL;
  @VF(47) : @E(T#200ms), @R(130.0, 520.0, 110.0, 19.0);
  @VF(48) : @E(16#524), @R(130.0, 480.0, 110.0, 19.0), UDINT;
  @VF(49) : @E(32), @R(710.0, 320.0, 110.0, 19.0), INT;
  @VF(50) : @E(16), @R(710.0, 300.0, 110.0, 19.0), INT;
  @C(85) : @FB(CANRECV5), @R(360.0, 1020.0, 120.0, 98.0), @I(@N(CH), @L(9.5)), @I(@N(ID), @L(29.5)), @I(@N(FMT), @L(49.5)), @I(@N(PER), @L(69.5)), @I(@N(ENB), @L(89.5)), @O(@N(CRX), @R(9.5)), @O(@N(DATA), @R(29.5)), @O(@N(DLC), @R(49.5)), @O(@N(MPER), @R(69.5)), @O(@N(RC), @R(89.5));
  @C(86) : @FB(CANRECV6), @R(360.0, 880.0, 120.0, 98.0), @I(@N(CH), @L(9.5)), @I(@N(ID), @L(29.5)), @I(@N(FMT), @L(49.5)), @I(@N(PER), @L(69.5)), @I(@N(ENB), @L(89.5)), @O(@N(CRX), @R(9.5)), @O(@N(DATA), @R(29.5)), @O(@N(DLC), @R(49.5)), @O(@N(MPER), @R(69.5)), @O(@N(RC), @R(89.5));
  @C(88) : @FB(CANRECV7), @R(360.0, 740.0, 120.0, 98.0), @I(@N(CH), @L(9.5)), @I(@N(ID), @L(29.5)), @I(@N(FMT), @L(49.5)), @I(@N(PER), @L(69.5)), @I(@N(ENB), @L(89.5)), @O(@N(CRX), @R(9.5)), @O(@N(DATA), @R(29.5)), @O(@N(DLC), @R(49.5)), @O(@N(MPER), @R(69.5)), @O(@N(RC), @R(89.5));
  @C(91) : @FB(CANRECV8), @R(360.0, 600.0, 120.0, 98.0), @I(@N(CH), @L(9.5)), @I(@N(ID), @L(29.5)), @I(@N(FMT), @L(49.5)), @I(@N(PER), @L(69.5)), @I(@N(ENB), @L(89.5)), @O(@N(CRX), @R(9.5)), @O(@N(DATA), @R(29.5)), @O(@N(DLC), @R(49.5)), @O(@N(MPER), @R(69.5)), @O(@N(RC), @R(89.5));
  @VF(93) : @E(32), @R(710.0, 1020.0, 110.0, 19.0), INT;
  @VF(94) : @E(16), @R(710.0, 1000.0, 110.0, 19.0), INT;
  @VF(95) : @E(32), @R(710.0, 880.0, 110.0, 19.0), INT;
  @VF(96) : @E(16), @R(710.0, 860.0, 110.0, 19.0), INT;
  @VF(97) : @E(0), @R(370.0, 980.0, 110.0, 19.0), UINT;
  @VF(98) : @E(0), @R(370.0, 1120.0, 110.0, 19.0), UINT;
  @VF(99) : @E(0), @R(370.0, 840.0, 110.0, 19.0), UINT;
  @VF(100) : @E(1), @R(130.0, 820.0, 110.0, 19.0), BOOL;
  @VF(101) : @E(T#1s), @R(130.0, 800.0, 110.0, 19.0);
  @VF(102) : @E(T#200ms), @R(130.0, 940.0, 110.0, 19.0);
  @VF(103) : @E(1), @R(130.0, 960.0, 110.0, 19.0), BOOL;
  @VF(104) : @E(16#527), @R(130.0, 900.0, 110.0, 19.0), UDINT;
  @VF(105) : @E(1), @R(130.0, 1100.0, 110.0, 19.0), BOOL;
  @VF(106) : @E(T#200ms), @R(130.0, 1080.0, 110.0, 19.0);
  @VF(107) : @E(16#528), @R(130.0, 1040.0, 110.0, 19.0), UDINT;
  @VF(108) : @E(16#526), @R(130.0, 760.0, 110.0, 19.0), UDINT;
  @VF(109) : @E(32), @R(710.0, 740.0, 110.0, 19.0), INT;
  @VF(110) : @E(16), @R(710.0, 720.0, 110.0, 19.0), INT;
  @VF(111) : @E(0), @R(370.0, 700.0, 110.0, 19.0), UINT;
  @VF(112) : @E(1), @R(130.0, 680.0, 110.0, 19.0), BOOL;
  @VF(114) : @E(T#1s), @R(130.0, 660.0, 110.0, 19.0);
  @VF(125) : @E(16#525), @R(130.0, 620.0, 110.0, 19.0), UDINT;
  @VF(127) : @E(32), @R(710.0, 600.0, 110.0, 19.0), INT;
  @VF(128) : @E(16), @R(710.0, 580.0, 110.0, 19.0), INT;
  @C(169) : @F(TO_DINT), @R(1060.0, 20.0, 120.0, 18.0), LWORD, @I(@N(IN), @L(9.5)), @O(@N(TO_DINT), @R(9.5));
  @C(171) : @F(TO_DINT), @R(1060.0, 160.0, 120.0, 18.0), LWORD, @I(@N(IN), @L(9.5)), @O(@N(TO_DINT), @R(9.5));
  @C(173) : @F(TO_DINT), @R(1060.0, 300.0, 120.0, 18.0), LWORD, @I(@N(IN), @L(9.5)), @O(@N(TO_DINT), @R(9.5));
  @C(175) : @F(TO_DINT), @R(1060.0, 440.0, 120.0, 18.0), LWORD, @I(@N(IN), @L(9.5)), @O(@N(TO_DINT), @R(9.5));
  @C(177) : @F(TO_DINT), @R(1060.0, 580.0, 120.0, 18.0), LWORD, @I(@N(IN), @L(9.5)), @O(@N(TO_DINT), @R(9.5));
  @C(179) : @F(TO_DINT), @R(1060.0, 720.0, 120.0, 18.0), LWORD, @I(@N(IN), @L(9.5)), @O(@N(TO_DINT), @R(9.5));
  @C(181) : @F(TO_DINT), @R(1060.0, 860.0, 120.0, 18.0), LWORD, @I(@N(IN), @L(9.5)), @O(@N(TO_DINT), @R(9.5));
  @C(183) : @F(TO_DINT), @R(1060.0, 1000.0, 120.0, 18.0), LWORD, @I(@N(IN), @L(9.5)), @O(@N(TO_DINT), @R(9.5));
  @C(185) : @F(TO_REAL), @R(1420.0, 20.0, 120.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_REAL), @R(9.5));
  @C(186) : @F(TO_REAL), @R(1420.0, 160.0, 120.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_REAL), @R(9.5));
  @C(199) : @F(TO_REAL), @R(1420.0, 300.0, 120.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_REAL), @R(9.5));
  @C(200) : @F(TO_REAL), @R(1420.0, 440.0, 120.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_REAL), @R(9.5));
  @VF(209) : @E(Current_mA), @R(1660.0, 20.0, 220.0, 19.0);
  @VF(210) : @E(Voltage1_mV), @R(1660.0, 160.0, 220.0, 19.0);
  @VF(211) : @E(Voltage2_mV), @R(1660.0, 300.0, 220.0, 19.0);
  @VF(212) : @E(Voltage3_mV), @R(1660.0, 440.0, 220.0, 19.0);
  @VF(213) : @E(Temp), @R(1660.0, 580.0, 220.0, 19.0);
  @VF(214) : @E(Power_kWh), @R(1660.0, 720.0, 220.0, 19.0);
  @C(219) : @F(DIV), @R(1580.0, 580.0, 40.0, 38.0), REAL, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(DIV), @R(9.5));
  @C(220) : @F(TO_REAL), @R(1420.0, 580.0, 120.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_REAL), @R(9.5));
  @VF(221) : @E(10), @R(1430.0, 600.0, 110.0, 19.0), REAL;
  @C(226) : @F(TO_REAL), @R(1420.0, 720.0, 120.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_REAL), @R(9.5));
  @C(228) : @F(TO_REAL), @R(1420.0, 860.0, 120.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_REAL), @R(9.5));
  @C(230) : @F(TO_REAL), @R(1420.0, 1000.0, 120.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_REAL), @R(9.5));
  @VF(233) : @E(Current_Counter_Ah), @R(1660.0, 860.0, 220.0, 19.0);
  @VF(234) : @E(Power_Counter_Wh), @R(1660.0, 1000.0, 220.0, 19.0);
  @VF(238) : @E(2), @R(710.0, 100.0, 110.0, 19.0), INT;
  @VF(239) : @E(14), @R(710.0, 80.0, 110.0, 19.0), INT;
  @VF(244) : @E(2), @R(710.0, 240.0, 110.0, 19.0), INT;
  @VF(245) : @E(14), @R(710.0, 220.0, 110.0, 19.0), INT;
  @VF(249) : @E(2), @R(710.0, 380.0, 110.0, 19.0), INT;
  @VF(250) : @E(14), @R(710.0, 360.0, 110.0, 19.0), INT;
  @VF(254) : @E(2), @R(710.0, 520.0, 110.0, 19.0), INT;
  @VF(255) : @E(14), @R(710.0, 500.0, 110.0, 19.0), INT;
  @VF(259) : @E(2), @R(710.0, 660.0, 110.0, 19.0), INT;
  @VF(260) : @E(14), @R(710.0, 640.0, 110.0, 19.0), INT;
  @VF(264) : @E(2), @R(710.0, 800.0, 110.0, 19.0), INT;
  @VF(265) : @E(14), @R(710.0, 780.0, 110.0, 19.0), INT;
  @VF(269) : @E(2), @R(710.0, 940.0, 110.0, 19.0), INT;
  @VF(270) : @E(14), @R(710.0, 920.0, 110.0, 19.0), INT;
  @VF(274) : @E(2), @R(710.0, 1080.0, 110.0, 19.0), INT;
  @VF(275) : @E(14), @R(710.0, 1060.0, 110.0, 19.0), INT;
  @VF(7) : @E(CAN_CH), @R(20.0, 40.0, 220.0, 19.0);
  @C(120) : @F(NE), @R(1220.0, 80.0, 40.0, 38.0), LWORD, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @VF(121) : @E(0), @R(1070.0, 100.0, 110.0, 19.0), LWORD;
  @C(124) : @F(NE), @R(1220.0, 220.0, 40.0, 38.0), LWORD, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @VF(126) : @E(0), @R(1070.0, 240.0, 110.0, 19.0), LWORD;
  @C(147) : @F(NE), @R(1220.0, 360.0, 40.0, 38.0), LWORD, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @VF(149) : @E(0), @R(1070.0, 380.0, 110.0, 19.0), LWORD;
  @C(163) : @F(NE), @R(1220.0, 500.0, 40.0, 38.0), LWORD, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @VF(166) : @E(0), @R(1070.0, 520.0, 110.0, 19.0), LWORD;
  @C(287) : @F(NE), @R(1220.0, 640.0, 40.0, 38.0), LWORD, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @VF(288) : @E(0), @R(1070.0, 660.0, 110.0, 19.0), LWORD;
  @C(291) : @F(NE), @R(1220.0, 780.0, 40.0, 38.0), LWORD, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @VF(292) : @E(0), @R(1070.0, 800.0, 110.0, 19.0), LWORD;
  @C(295) : @F(NE), @R(1220.0, 920.0, 40.0, 38.0), LWORD, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @VF(296) : @E(0), @R(1070.0, 940.0, 110.0, 19.0), LWORD;
  @C(299) : @F(NE), @R(1220.0, 1060.0, 40.0, 38.0), LWORD, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @VF(300) : @E(0), @R(1070.0, 1080.0, 110.0, 19.0), LWORD;
  @VF(303) : @E(Error_521), @R(1300.0, 80.0, 220.0, 19.0);
  @VF(304) : @E(Error_522), @R(1300.0, 220.0, 220.0, 19.0);
  @VF(305) : @E(Error_523), @R(1300.0, 360.0, 220.0, 19.0);
  @VF(306) : @E(Error_524), @R(1300.0, 500.0, 220.0, 19.0);
  @VF(307) : @E(Error_525), @R(1300.0, 640.0, 220.0, 19.0);
  @VF(308) : @E(Error_526), @R(1300.0, 780.0, 220.0, 19.0);
  @VF(309) : @E(Error_527), @R(1300.0, 920.0, 220.0, 19.0);
  @VF(317) : @E(Error_528), @R(1300.0, 1060.0, 220.0, 19.0);
  @VF(319) : @E(Error_521), @R(20.0, 1360.0, 220.0, 19.0);
  @VF(320) : @E(Error_522), @R(20.0, 1380.0, 220.0, 19.0);
  @VF(321) : @E(Error_523), @R(20.0, 1400.0, 220.0, 19.0);
  @VF(322) : @E(Error_524), @R(20.0, 1420.0, 220.0, 19.0);
  @VF(323) : @E(Error_525), @R(20.0, 1440.0, 220.0, 19.0);
  @VF(324) : @E(Error_526), @R(20.0, 1460.0, 220.0, 19.0);
  @VF(325) : @E(Error_527), @R(20.0, 1480.0, 220.0, 19.0);
  @VF(326) : @E(Error_528), @R(20.0, 1500.0, 220.0, 19.0);
  @C(327) : @F(OR), @R(280.0, 1360.0, 40.0, 158.0), BOOL, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @I(@N(IN3), @L(49.5)), @I(@N(IN4), @L(69.5)), @I(@N(IN5), @L(89.5)), @I(@N(IN6), @L(109.5)), @I(@N(IN7), @L(129.5)), @I(@N(IN8), @L(149.5)), @O(@N(OR), @R(9.5));
  @C(336) : @FB(TON1), @R(510.0, 1360.0, 100.0, 38.0), @I(@N(IN), @L(9.5)), @I(@N(PT), @L(29.5)), @O(@N(Q), @R(9.5)), @O(@N(ET), @R(29.5));
  @VF(338) : @E(T#500ms), @R(360.0, 1380.0, 110.0, 19.0);
  @VF(340) : @E(CMS_Error), @R(1660.0, 1360.0, 220.0, 19.0);
  @CF(465) : @R(1770.0, 40.0, 110.0, 19.0), @T("mA");
  @CF(342) : @R(1770.0, 180.0, 110.0, 19.0), @T("mv");
  @CF(343) : @R(1770.0, 320.0, 110.0, 19.0), @T("mV");
  @CF(344) : @R(1770.0, 460.0, 110.0, 19.0), @T("mV");
  @CF(345) : @R(1770.0, 600.0, 110.0, 19.0), @T("DEGREE");
  @CF(346) : @R(1770.0, 740.0, 110.0, 19.0), @T("kW");
  @CF(347) : @R(1770.0, 880.0, 110.0, 19.0), @T("AMPERE/HOUR");
  @CF(348) : @R(1770.0, 1020.0, 110.0, 19.0), @T("WATT/HOUR");
  @C(349) : @F(FROM_BIG_ENDIAN), @R(1220.0, 20.0, 160.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(FROM_BIG_ENDIAN), @R(9.5));
  @C(188) : @F(FROM_BIG_ENDIAN), @R(1220.0, 160.0, 160.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(FROM_BIG_ENDIAN), @R(9.5));
  @C(224) : @F(FROM_BIG_ENDIAN), @R(1220.0, 300.0, 160.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(FROM_BIG_ENDIAN), @R(9.5));
  @C(231) : @F(FROM_BIG_ENDIAN), @R(1220.0, 440.0, 160.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(FROM_BIG_ENDIAN), @R(9.5));
  @C(353) : @F(FROM_BIG_ENDIAN), @R(1220.0, 580.0, 160.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(FROM_BIG_ENDIAN), @R(9.5));
  @C(356) : @F(FROM_BIG_ENDIAN), @R(1220.0, 720.0, 160.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(FROM_BIG_ENDIAN), @R(9.5));
  @C(359) : @F(FROM_BIG_ENDIAN), @R(1220.0, 860.0, 160.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(FROM_BIG_ENDIAN), @R(9.5));
  @C(362) : @F(FROM_BIG_ENDIAN), @R(1220.0, 1000.0, 160.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(FROM_BIG_ENDIAN), @R(9.5));
  @C(365) : @F(NE), @R(520.0, 820.0, 40.0, 38.0), UINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @C(82) : @F(NE), @R(520.0, 960.0, 40.0, 38.0), UINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @C(132) : @F(NE), @R(520.0, 1100.0, 40.0, 38.0), UINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @C(33) : @F(NE), @R(520.0, 680.0, 40.0, 38.0), UINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @C(59) : @F(NE), @R(520.0, 540.0, 40.0, 38.0), UINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @C(65) : @F(NE), @R(520.0, 400.0, 40.0, 38.0), UINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @C(4) : @F(NE), @R(520.0, 260.0, 40.0, 38.0), UINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @C(113) : @F(NE), @R(520.0, 120.0, 40.0, 38.0), UINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @C(160) : @F(OR), @R(710.0, 1150.0, 40.0, 158.0), BOOL, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @I(@N(IN3), @L(49.5)), @I(@N(IN4), @L(69.5)), @I(@N(IN5), @L(89.5)), @I(@N(IN6), @L(109.5)), @I(@N(IN7), @L(129.5)), @I(@N(IN8), @L(149.5)), @O(@N(OR), @R(9.5));
  @VF(374) : @E(CAN_Error), @R(1660.0, 1150.0, 220.0, 19.0);
  @C(331) : @F(DIV), @R(1580.0, 860.0, 40.0, 38.0), REAL, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(DIV), @R(9.5));
  @VF(376) : @E(3600), @R(1430.0, 880.0, 110.0, 19.0), REAL;
  @C(379) : @F(DIV), @R(1580.0, 720.0, 40.0, 38.0), REAL, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(DIV), @R(9.5));
  @VF(380) : @E(1000), @R(1430.0, 740.0, 110.0, 19.0), REAL;
  @VF(384) : @E(16#411), @R(700.0, 1600.0, 110.0, 19.0), UDINT;
  @VF(386) : @E(CAN_CH), @R(590.0, 1580.0, 220.0, 19.0);
  @VF(388) : @E(CAN_FORMAT#STANDARD), @R(590.0, 1620.0, 220.0, 19.0);
  @VF(393) : @E(16#42), @R(130.0, 1600.0, 110.0, 19.0), LWORD;
  @VF(395) : @E(8), @R(130.0, 1580.0, 110.0, 19.0), INT;
  @VF(396) : @E(0), @R(130.0, 1560.0, 110.0, 19.0), INT;
  @VF(401) : @E(16#06), @R(130.0, 1660.0, 110.0, 19.0), LWORD;
  @VF(402) : @E(8), @R(130.0, 1640.0, 110.0, 19.0), INT;
  @VF(403) : @E(8), @R(130.0, 1620.0, 110.0, 19.0), INT;
  @C(407) : @F(OR), @R(480.0, 1560.0, 40.0, 38.0), LWORD, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(OR), @R(9.5));
  @C(411) : @FB(CANRECV9), @R(280.0, 1800.0, 120.0, 98.0), @I(@N(CH), @L(9.5)), @I(@N(ID), @L(29.5)), @I(@N(FMT), @L(49.5)), @I(@N(PER), @L(69.5)), @I(@N(ENB), @L(89.5)), @O(@N(CRX), @R(9.5)), @O(@N(DATA), @R(29.5)), @O(@N(DLC), @R(49.5)), @O(@N(MPER), @R(69.5)), @O(@N(RC), @R(89.5));
  @VF(412) : @E(16#511), @R(130.0, 1820.0, 110.0, 19.0), UDINT;
  @VF(413) : @E(T#100ms), @R(130.0, 1860.0, 110.0, 19.0);
  @VF(414) : @E(1), @R(130.0, 1880.0, 110.0, 19.0), BOOL;
  @VF(383) : @E(CAN_CH), @R(20.0, 1800.0, 220.0, 19.0);
  @VF(418) : @E(CAN_FORMAT#STANDARD), @R(20.0, 1840.0, 220.0, 19.0);
  @VF(436) : @E(2), @R(700.0, 1640.0, 110.0, 19.0), UDINT;
  @VF(438) : @E(Overall_Power_kWh), @R(1040.0, 1780.0, 220.0, 19.0);
  @CF(442) : @R(1150.0, 1800.0, 110.0, 19.0), @T("kW");
  @VF(449) : @E(0), @R(490.0, 1780.0, 110.0, 19.0), INT;
  @VF(451) : @E(48), @R(490.0, 1800.0, 110.0, 19.0), INT;
  @C(454) : @F(TO_LREAL), @R(800.0, 1780.0, 120.0, 18.0), LWORD, @I(@N(IN), @L(9.5)), @O(@N(TO_LREAL), @R(9.5));
  @C(456) : @F(DIV), @R(960.0, 1780.0, 40.0, 38.0), LREAL, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(DIV), @R(9.5));
  @VF(457) : @E(1000), @R(810.0, 1800.0, 110.0, 19.0), LREAL;
  @C(455) : @F(FROM_BIG_ENDIAN), @R(440.0, 1820.0, 160.0, 18.0), LWORD, @I(@N(IN), @L(9.5)), @O(@N(FROM_BIG_ENDIAN), @R(9.5));
  @VF(215) : @E(1), @R(700.0, 1680.0, 110.0, 19.0), BOOL;
  @VF(216) : @E(T#1s), @R(700.0, 1660.0, 110.0, 19.0);
  @C(217) : @FB(CANSEND1), @R(870.0, 1560.0, 120.0, 138.0), @I(@N(CH), @L(29.5)), @I(@N(ID), @L(49.5)), @I(@N(FMT), @L(69.5)), @I(@N(DATA), @L(9.5)), @I(@N(DLC), @L(89.5)), @I(@N(PER), @L(109.5)), @I(@N(ENB), @L(129.5)), @O(@N(CTX), @R(9.5)), @O(@N(RC), @R(129.5));
  @C(54) : @F(RBIT), @R(900.0, 20.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(61) : @F(RBIT), @R(900.0, 80.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(12) : @F(RBIT), @R(900.0, 160.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(31) : @F(RBIT), @R(900.0, 220.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(32) : @F(RBIT), @R(900.0, 300.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(38) : @F(RBIT), @R(900.0, 360.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(34) : @F(RBIT), @R(900.0, 440.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(62) : @F(RBIT), @R(900.0, 500.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(63) : @F(RBIT), @R(900.0, 580.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(64) : @F(RBIT), @R(900.0, 640.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(79) : @F(RBIT), @R(900.0, 720.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(80) : @F(RBIT), @R(900.0, 780.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(84) : @F(RBIT), @R(900.0, 860.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(89) : @F(RBIT), @R(900.0, 920.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(81) : @F(RBIT), @R(900.0, 1000.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(92) : @F(RBIT), @R(900.0, 1060.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(332) : @F(WBIT), @R(290.0, 1560.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(334) : @F(WBIT), @R(290.0, 1620.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(394) : @F(RBIT), @R(640.0, 1780.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @CP(242) : 859.5, 69.5;
  @CP(278) : 859.5, 209.5;
  @CP(279) : 859.5, 349.5;
  @CP(280) : 859.5, 489.5;
  @CP(281) : 859.5, 629.5;
  @CP(282) : 859.5, 769.5;
  @CP(283) : 859.5, 909.5;
  @CP(284) : 859.5, 1049.5;
  @CP(17) : 279.5, 89.5;
  @CP(19) : 319.5, 49.5;
  @CP(27) : 319.5, 189.5;
  @CP(30) : 319.5, 329.5;
  @CP(51) : 319.5, 469.5;
  @CP(52) : 319.5, 609.5;
  @CP(53) : 319.5, 749.5;
  @CP(55) : 319.5, 889.5;
  @CP(72) : 279.5, 229.5;
  @CP(74) : 279.5, 369.5;
  @CP(75) : 279.5, 509.5;
  @CP(78) : 279.5, 649.5;
  @CP(117) : 279.5, 789.5;
  @CP(119) : 279.5, 929.5;

  @G(3) :
     @L(@VF(18).o, @C(1).PER)
    ;
  @G(9) :
     @L(@C(1).DATA, @CP(242)),
     @L(@CP(242), @C(61).INbit),
     @L(@CP(242), @C(54).INbit)
    ;
  @G(5) :
     @L(@VF(10).o, @CP(17)),
     @L(@CP(17), @C(1).FMT),
     @L(@CP(17), @CP(72)),
     @L(@CP(72), @C(8).FMT),
     @L(@CP(72), @CP(74)),
     @L(@CP(74), @C(37).FMT),
     @L(@CP(74), @CP(75)),
     @L(@CP(75), @C(36).FMT),
     @L(@CP(75), @CP(78)),
     @L(@CP(78), @C(91).FMT),
     @L(@CP(78), @CP(117)),
     @L(@CP(117), @C(88).FMT),
     @L(@CP(117), @CP(119)),
     @L(@CP(119), @C(86).FMT),
     @L(@CP(119), @C(85).FMT)
    ;
  @G(6) :
     @L(@VF(11).o, @C(1).ID)
    ;
  @G(2) :
     @L(@VF(66).o, @C(1).ENB)
    ;
  @G(25) :
     @L(@VF(14).o, @C(8).ENB)
    ;
  @G(26) :
     @L(@VF(15).o, @C(8).PER)
    ;
  @G(28) :
     @L(@C(8).DATA, @CP(278)),
     @L(@CP(278), @C(12).INbit),
     @L(@CP(278), @C(31).INbit)
    ;
  @G(29) :
     @L(@VF(16).o, @C(8).ID)
    ;
  @G(60) :
     @L(@C(36).DATA, @CP(280)),
     @L(@CP(280), @C(34).INbit),
     @L(@CP(280), @C(62).INbit)
    ;
  @G(68) :
     @L(@VF(43).o, @C(37).PER)
    ;
  @G(69) :
     @L(@VF(44).o, @C(37).ENB)
    ;
  @G(70) :
     @L(@VF(46).o, @C(36).ENB)
    ;
  @G(71) :
     @L(@VF(47).o, @C(36).PER)
    ;
  @G(73) :
     @L(@VF(48).o, @C(36).ID)
    ;
  @G(76) :
     @L(@C(37).DATA, @CP(279)),
     @L(@CP(279), @C(32).INbit),
     @L(@CP(279), @C(38).INbit)
    ;
  @G(77) :
     @L(@VF(45).o, @C(37).ID)
    ;
  @G(133) :
     @L(@C(85).DATA, @CP(284)),
     @L(@CP(284), @C(81).INbit),
     @L(@CP(284), @C(92).INbit)
    ;
  @G(136) :
     @L(@C(86).DATA, @CP(283)),
     @L(@CP(283), @C(89).INbit),
     @L(@CP(283), @C(84).INbit)
    ;
  @G(140) :
     @L(@VF(102).o, @C(86).PER)
    ;
  @G(141) :
     @L(@VF(103).o, @C(86).ENB)
    ;
  @G(142) :
     @L(@VF(105).o, @C(85).ENB)
    ;
  @G(143) :
     @L(@VF(106).o, @C(85).PER)
    ;
  @G(145) :
     @L(@VF(107).o, @C(85).ID)
    ;
  @G(148) :
     @L(@VF(104).o, @C(86).ID)
    ;
  @G(151) :
     @L(@VF(100).o, @C(88).ENB)
    ;
  @G(152) :
     @L(@VF(101).o, @C(88).PER)
    ;
  @G(154) :
     @L(@C(88).DATA, @CP(282)),
     @L(@CP(282), @C(79).INbit),
     @L(@CP(282), @C(80).INbit)
    ;
  @G(155) :
     @L(@VF(108).o, @C(88).ID)
    ;
  @G(161) :
     @L(@VF(112).o, @C(91).ENB)
    ;
  @G(162) :
     @L(@VF(114).o, @C(91).PER)
    ;
  @G(164) :
     @L(@C(91).DATA, @CP(281)),
     @L(@CP(281), @C(63).INbit),
     @L(@CP(281), @C(64).INbit)
    ;
  @G(165) :
     @L(@VF(125).o, @C(91).ID)
    ;
  @G(222) :
     @L(@VF(221).o, @C(219).IN2)
    ;
  @G(223) :
     @L(@C(220).TO_REAL, @C(219).IN1)
    ;
  @G(225) :
     @L(@C(219).DIV, @VF(213).i)
    ;
  @G(236) :
     @L(@C(230).TO_REAL, @VF(234).i)
    ;
  @G(22) :
     @L(@VF(7).o, @CP(19)),
     @L(@CP(19), @C(1).CH),
     @L(@CP(19), @CP(27)),
     @L(@CP(27), @C(8).CH),
     @L(@CP(27), @CP(30)),
     @L(@CP(30), @C(37).CH),
     @L(@CP(30), @CP(51)),
     @L(@CP(51), @C(36).CH),
     @L(@CP(51), @CP(52)),
     @L(@CP(52), @C(91).CH),
     @L(@CP(52), @CP(53)),
     @L(@CP(53), @C(88).CH),
     @L(@CP(53), @CP(55)),
     @L(@CP(55), @C(86).CH),
     @L(@CP(55), @C(85).CH)
    ;
  @G(123) :
     @L(@VF(121).o, @C(120).IN2)
    ;
  @G(144) :
     @L(@VF(126).o, @C(124).IN2)
    ;
  @G(153) :
     @L(@VF(149).o, @C(147).IN2)
    ;
  @G(285) :
     @L(@VF(166).o, @C(163).IN2)
    ;
  @G(289) :
     @L(@VF(288).o, @C(287).IN2)
    ;
  @G(293) :
     @L(@VF(292).o, @C(291).IN2)
    ;
  @G(297) :
     @L(@VF(296).o, @C(295).IN2)
    ;
  @G(301) :
     @L(@VF(300).o, @C(299).IN2)
    ;
  @G(314) :
     @L(@C(287).NE, @VF(307).i)
    ;
  @G(315) :
     @L(@C(291).NE, @VF(308).i)
    ;
  @G(316) :
     @L(@C(295).NE, @VF(309).i)
    ;
  @G(318) :
     @L(@C(299).NE, @VF(317).i)
    ;
  @G(337) :
     @L(@C(327).OR, @C(336).IN)
    ;
  @G(339) :
     @L(@VF(338).o, @C(336).PT)
    ;
  @G(187) :
     @L(@C(169).TO_DINT, @C(349).IN)
    ;
  @G(350) :
     @L(@C(349).FROM_BIG_ENDIAN, @C(185).IN)
    ;
  @G(207) :
     @L(@C(171).TO_DINT, @C(188).IN)
    ;
  @G(208) :
     @L(@C(188).FROM_BIG_ENDIAN, @C(186).IN)
    ;
  @G(227) :
     @L(@C(173).TO_DINT, @C(224).IN)
    ;
  @G(229) :
     @L(@C(224).FROM_BIG_ENDIAN, @C(199).IN)
    ;
  @G(351) :
     @L(@C(175).TO_DINT, @C(231).IN)
    ;
  @G(352) :
     @L(@C(231).FROM_BIG_ENDIAN, @C(200).IN)
    ;
  @G(354) :
     @L(@C(177).TO_DINT, @C(353).IN)
    ;
  @G(355) :
     @L(@C(353).FROM_BIG_ENDIAN, @C(220).IN)
    ;
  @G(357) :
     @L(@C(179).TO_DINT, @C(356).IN)
    ;
  @G(358) :
     @L(@C(356).FROM_BIG_ENDIAN, @C(226).IN)
    ;
  @G(360) :
     @L(@C(181).TO_DINT, @C(359).IN)
    ;
  @G(361) :
     @L(@C(359).FROM_BIG_ENDIAN, @C(228).IN)
    ;
  @G(363) :
     @L(@C(183).TO_DINT, @C(362).IN)
    ;
  @G(364) :
     @L(@C(362).FROM_BIG_ENDIAN, @C(230).IN)
    ;
  @G(87) :
     @L(@C(88).RC, @C(365).IN1)
    ;
  @G(139) :
     @L(@VF(99).o, @C(365).IN2)
    ;
  @G(83) :
     @L(@C(86).RC, @C(82).IN1)
    ;
  @G(131) :
     @L(@VF(97).o, @C(82).IN2)
    ;
  @G(134) :
     @L(@C(85).RC, @C(132).IN1)
    ;
  @G(135) :
     @L(@VF(98).o, @C(132).IN2)
    ;
  @G(35) :
     @L(@C(91).RC, @C(33).IN1)
    ;
  @G(58) :
     @L(@VF(111).o, @C(33).IN2)
    ;
  @G(67) :
     @L(@C(36).RC, @C(59).IN1)
    ;
  @G(90) :
     @L(@VF(42).o, @C(59).IN2)
    ;
  @G(150) :
     @L(@C(37).RC, @C(65).IN1)
    ;
  @G(159) :
     @L(@VF(41).o, @C(65).IN2)
    ;
  @G(23) :
     @L(@C(8).RC, @C(4).IN1)
    ;
  @G(24) :
     @L(@VF(13).o, @C(4).IN2)
    ;
  @G(116) :
     @L(@C(1).RC, @C(113).IN1)
    ;
  @G(118) :
     @L(@VF(115).o, @C(113).IN2)
    ;
  @G(370) :
     @L(@C(59).NE, @C(160).IN4)
    ;
  @G(371) :
     @L(@C(65).NE, @C(160).IN3)
    ;
  @G(372) :
     @L(@C(4).NE, @C(160).IN2)
    ;
  @G(373) :
     @L(@C(113).NE, @C(160).IN1)
    ;
  @G(366) :
     @L(@C(132).NE, @C(160).IN8)
    ;
  @G(367) :
     @L(@C(82).NE, @C(160).IN7)
    ;
  @G(368) :
     @L(@C(365).NE, @C(160).IN6)
    ;
  @G(369) :
     @L(@C(33).NE, @C(160).IN5)
    ;
  @G(377) :
     @L(@VF(376).o, @C(331).IN2)
    ;
  @G(235) :
     @L(@C(228).TO_REAL, @C(331).IN1)
    ;
  @G(378) :
     @L(@C(331).DIV, @VF(233).i)
    ;
  @G(381) :
     @L(@VF(380).o, @C(379).IN2)
    ;
  @G(232) :
     @L(@C(226).TO_REAL, @C(379).IN1)
    ;
  @G(382) :
     @L(@C(379).DIV, @VF(214).i)
    ;
  @G(415) :
     @L(@VF(412).o, @C(411).ID)
    ;
  @G(416) :
     @L(@VF(413).o, @C(411).PER)
    ;
  @G(417) :
     @L(@VF(414).o, @C(411).ENB)
    ;
  @G(385) :
     @L(@VF(383).o, @C(411).CH)
    ;
  @G(419) :
     @L(@VF(418).o, @C(411).FMT)
    ;
  @G(458) :
     @L(@VF(457).o, @C(456).IN2)
    ;
  @G(459) :
     @L(@C(454).TO_LREAL, @C(456).IN1)
    ;
  @G(460) :
     @L(@C(456).DIV, @VF(438).i)
    ;
  @G(420) :
     @L(@C(411).DATA, @C(455).IN)
    ;
  @G(190) :
     @L(@C(200).TO_REAL, @VF(212).i)
    ;
  @G(191) :
     @L(@C(199).TO_REAL, @VF(211).i)
    ;
  @G(192) :
     @L(@C(186).TO_REAL, @VF(210).i)
    ;
  @G(193) :
     @L(@C(185).TO_REAL, @VF(209).i)
    ;
  @G(189) :
     @L(@C(163).NE, @VF(306).i)
    ;
  @G(194) :
     @L(@C(147).NE, @VF(305).i)
    ;
  @G(195) :
     @L(@C(124).NE, @VF(304).i)
    ;
  @G(196) :
     @L(@C(120).NE, @VF(303).i)
    ;
  @G(198) :
     @L(@VF(320).o, @C(327).IN2)
    ;
  @G(197) :
     @L(@VF(321).o, @C(327).IN3)
    ;
  @G(201) :
     @L(@VF(322).o, @C(327).IN4)
    ;
  @G(202) :
     @L(@VF(319).o, @C(327).IN1)
    ;
  @G(203) :
     @L(@VF(323).o, @C(327).IN5)
    ;
  @G(204) :
     @L(@VF(324).o, @C(327).IN6)
    ;
  @G(205) :
     @L(@VF(325).o, @C(327).IN7)
    ;
  @G(206) :
     @L(@VF(326).o, @C(327).IN8)
    ;
  @G(218) :
     @L(@VF(386).o, @C(217).CH)
    ;
  @G(310) :
     @L(@VF(384).o, @C(217).ID)
    ;
  @G(311) :
     @L(@VF(388).o, @C(217).FMT)
    ;
  @G(312) :
     @L(@VF(436).o, @C(217).DLC)
    ;
  @G(313) :
     @L(@C(407).OR, @C(217).DATA)
    ;
  @G(328) :
     @L(@VF(216).o, @C(217).PER)
    ;
  @G(329) :
     @L(@VF(215).o, @C(217).ENB)
    ;
  @G(333) :
     @L(@C(160).OR, @VF(374).i)
    ;
  @G(330) :
     @L(@C(336).Q, @VF(340).i)
    ;
  @G(122) :
     @L(@VF(274).o, @C(92).len)
    ;
  @G(129) :
     @L(@VF(275).o, @C(92).start)
    ;
  @G(130) :
     @L(@VF(93).o, @C(81).len)
    ;
  @G(137) :
     @L(@VF(94).o, @C(81).start)
    ;
  @G(138) :
     @L(@VF(270).o, @C(89).start)
    ;
  @G(146) :
     @L(@VF(269).o, @C(89).len)
    ;
  @G(156) :
     @L(@VF(95).o, @C(84).len)
    ;
  @G(157) :
     @L(@VF(96).o, @C(84).start)
    ;
  @G(158) :
     @L(@VF(110).o, @C(79).start)
    ;
  @G(167) :
     @L(@VF(109).o, @C(79).len)
    ;
  @G(168) :
     @L(@VF(265).o, @C(80).start)
    ;
  @G(170) :
     @L(@VF(264).o, @C(80).len)
    ;
  @G(172) :
     @L(@VF(128).o, @C(63).start)
    ;
  @G(174) :
     @L(@VF(127).o, @C(63).len)
    ;
  @G(176) :
     @L(@VF(260).o, @C(64).start)
    ;
  @G(178) :
     @L(@VF(259).o, @C(64).len)
    ;
  @G(180) :
     @L(@VF(40).o, @C(34).start)
    ;
  @G(182) :
     @L(@VF(39).o, @C(34).len)
    ;
  @G(184) :
     @L(@VF(255).o, @C(62).start)
    ;
  @G(237) :
     @L(@VF(254).o, @C(62).len)
    ;
  @G(240) :
     @L(@VF(250).o, @C(38).start)
    ;
  @G(241) :
     @L(@VF(249).o, @C(38).len)
    ;
  @G(243) :
     @L(@VF(49).o, @C(32).len)
    ;
  @G(246) :
     @L(@VF(50).o, @C(32).start)
    ;
  @G(247) :
     @L(@VF(21).o, @C(12).start)
    ;
  @G(248) :
     @L(@VF(20).o, @C(12).len)
    ;
  @G(251) :
     @L(@VF(245).o, @C(31).start)
    ;
  @G(252) :
     @L(@VF(244).o, @C(31).len)
    ;
  @G(253) :
     @L(@VF(239).o, @C(61).start)
    ;
  @G(256) :
     @L(@VF(238).o, @C(61).len)
    ;
  @G(257) :
     @L(@VF(57).o, @C(54).len)
    ;
  @G(258) :
     @L(@VF(56).o, @C(54).start)
    ;
  @G(261) :
     @L(@C(54).OUTbit, @C(169).IN)
    ;
  @G(262) :
     @L(@C(61).OUTbit, @C(120).IN1)
    ;
  @G(263) :
     @L(@C(31).OUTbit, @C(124).IN1)
    ;
  @G(266) :
     @L(@C(12).OUTbit, @C(171).IN)
    ;
  @G(267) :
     @L(@C(32).OUTbit, @C(173).IN)
    ;
  @G(268) :
     @L(@C(38).OUTbit, @C(147).IN1)
    ;
  @G(271) :
     @L(@C(34).OUTbit, @C(175).IN)
    ;
  @G(272) :
     @L(@C(62).OUTbit, @C(163).IN1)
    ;
  @G(273) :
     @L(@C(63).OUTbit, @C(177).IN)
    ;
  @G(276) :
     @L(@C(64).OUTbit, @C(287).IN1)
    ;
  @G(277) :
     @L(@C(79).OUTbit, @C(179).IN)
    ;
  @G(286) :
     @L(@C(80).OUTbit, @C(291).IN1)
    ;
  @G(290) :
     @L(@C(84).OUTbit, @C(181).IN)
    ;
  @G(294) :
     @L(@C(81).OUTbit, @C(183).IN)
    ;
  @G(298) :
     @L(@C(89).OUTbit, @C(295).IN1)
    ;
  @G(302) :
     @L(@C(92).OUTbit, @C(299).IN1)
    ;
  @G(335) :
     @L(@C(332).OUTbit, @C(407).IN1)
    ;
  @G(341) :
     @L(@C(334).OUTbit, @C(407).IN2)
    ;
  @G(375) :
     @L(@VF(396).o, @C(332).start)
    ;
  @G(387) :
     @L(@VF(395).o, @C(332).len)
    ;
  @G(389) :
     @L(@VF(393).o, @C(332).INbit)
    ;
  @G(390) :
     @L(@VF(403).o, @C(334).start)
    ;
  @G(391) :
     @L(@VF(402).o, @C(334).len)
    ;
  @G(392) :
     @L(@VF(401).o, @C(334).INbit)
    ;
  @G(397) :
     @L(@VF(449).o, @C(394).start)
    ;
  @G(398) :
     @L(@VF(451).o, @C(394).len)
    ;
  @G(399) :
     @L(@C(455).FROM_BIG_ENDIAN, @C(394).INbit)
    ;
  @G(400) :
     @L(@C(394).OUTbit, @C(454).IN)
    ;
END_FUNCTION_BLOCK
