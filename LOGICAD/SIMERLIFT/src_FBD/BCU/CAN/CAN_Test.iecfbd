FUNCTION_BLOCK CAN_Test
  {
    IN_1 {index := 2};
    IN_2 {index := 3};
    IN_3 {index := 4};
    IN_4 {index := 5};
    CAN_CH {index := 0};
    CAN_ID {index := 1};
    height := 118;
    width := 200;
  }

  VAR
    CANSEND3 : CANSEND;
  END_VAR
  VAR_INPUT
    IN_1 : UINT := 0;
    IN_2 : UINT := 0;
    IN_3 : UINT := 0;
    IN_4 : UINT := 0;
    CAN_CH : UDINT := 0;
    CAN_ID : UDINT := 0;
  END_VAR

  (*

    // Network 1:
    TO_LWORD(IN := IN_1, TO_LWORD => @C(15).TO_LWORD);
    WBIT(start := 0, len := 16, INbit := @C(15).TO_LWORD, OUTbit => @C(8).OUTbit);
    TO_LWORD(IN := IN_2, TO_LWORD => @C(16).TO_LWORD);
    WBIT(start := 16, len := 16, INbit := @C(16).TO_LWORD, OUTbit => @C(10).OUTbit);
    NE(IN1 := CAN_ID, IN2 := 0, NE => @C(64).NE);
    TO_LWORD(IN := IN_3, TO_LWORD => @C(17).TO_LWORD);
    WBIT(start := 32, len := 16, INbit := @C(17).TO_LWORD, OUTbit => @C(13).OUTbit);
    TO_LWORD(IN := IN_4, TO_LWORD => @C(18).TO_LWORD);
    WBIT(start := 48, len := 16, INbit := @C(18).TO_LWORD, OUTbit => @C(14).OUTbit);
    OR(IN1 := @C(8).OUTbit, IN2 := @C(10).OUTbit, IN3 := @C(13).OUTbit, IN4 := @C(14).OUTbit, OR => @C(226).OR);
    CANSEND3(CH := CAN_CH, ID := CAN_ID, FMT := CAN_FORMAT#EXTENDED, DATA := @C(226).OR, DLC := 8, PER := T#100ms, ENB := @C(64).NE);

  *)

  @C(226) : @F(OR), @R(620.0, 40.0, 40.0, 78.0), LWORD, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @I(@N(IN3), @L(49.5)), @I(@N(IN4), @L(69.5)), @O(@N(OR), @R(9.5));
  @C(64) : @F(NE), @R(1050.0, 160.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(NE), @R(9.5));
  @VF(230) : @E(0), @R(300.0, 40.0, 110.0, 19.0), INT;
  @VF(231) : @E(16), @R(300.0, 60.0, 110.0, 19.0), INT;
  @VF(232) : @E(16), @R(300.0, 100.0, 110.0, 19.0), INT;
  @VF(233) : @E(16), @R(300.0, 120.0, 110.0, 19.0), INT;
  @VF(234) : @E(32), @R(300.0, 160.0, 110.0, 19.0), INT;
  @VF(235) : @E(16), @R(300.0, 180.0, 110.0, 19.0), INT;
  @VF(66) : @E(0), @R(860.0, 180.0, 110.0, 19.0), UDINT;
  @VF(258) : @E(T#100ms), @R(860.0, 140.0, 110.0, 19.0);
  @VF(259) : @E(8), @R(860.0, 120.0, 110.0, 19.0), UDINT;
  @VF(262) : @E(CAN_FORMAT#EXTENDED), @R(750.0, 100.0, 220.0, 19.0);
  @VF(3) : @E(IN_1), @R(40.0, 80.0, 220.0, 19.0);
  @VF(4) : @E(IN_2), @R(40.0, 140.0, 220.0, 19.0);
  @VF(5) : @E(IN_3), @R(40.0, 200.0, 220.0, 19.0);
  @VF(6) : @E(IN_4), @R(40.0, 260.0, 220.0, 19.0);
  @VF(23) : @E(48), @R(300.0, 220.0, 110.0, 19.0), INT;
  @VF(24) : @E(16), @R(300.0, 240.0, 110.0, 19.0), INT;
  @C(158) : @FB(CANSEND3), @R(1130.0, 40.0, 120.0, 138.0), @I(@N(CH), @L(29.5)), @I(@N(ID), @L(49.5)), @I(@N(FMT), @L(69.5)), @I(@N(DATA), @L(9.5)), @I(@N(DLC), @L(89.5)), @I(@N(PER), @L(109.5)), @I(@N(ENB), @L(129.5)), @O(@N(CTX), @R(9.5)), @O(@N(RC), @R(129.5));
  @VF(7) : @E(CAN_CH), @R(750.0, 60.0, 220.0, 19.0);
  @VF(9) : @E(CAN_ID), @R(750.0, 80.0, 220.0, 19.0);
  @C(8) : @F(WBIT), @R(450.0, 40.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(10) : @F(WBIT), @R(450.0, 100.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(13) : @F(WBIT), @R(450.0, 160.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(14) : @F(WBIT), @R(450.0, 220.0, 120.0, 58.0), @I(@N(start), @L(9.5)), @I(@N(len), @L(29.5)), @I(@N(INbit), @L(49.5)), @O(@N(OUTbit), @R(9.5));
  @C(15) : @F(TO_LWORD), @R(290.0, 80.0, 120.0, 18.0), UINT, @I(@N(IN), @L(9.5)), @O(@N(TO_LWORD), @R(9.5));
  @C(16) : @F(TO_LWORD), @R(290.0, 140.0, 120.0, 18.0), UINT, @I(@N(IN), @L(9.5)), @O(@N(TO_LWORD), @R(9.5));
  @C(17) : @F(TO_LWORD), @R(290.0, 200.0, 120.0, 18.0), UINT, @I(@N(IN), @L(9.5)), @O(@N(TO_LWORD), @R(9.5));
  @C(18) : @F(TO_LWORD), @R(290.0, 260.0, 120.0, 18.0), UINT, @I(@N(IN), @L(9.5)), @O(@N(TO_LWORD), @R(9.5));
  @CP(2) : 1009.5, 89.5;

  @G(67) :
     @L(@VF(66).o, @C(64).IN2)
    ;
  @G(239) :
     @L(@VF(262).o, @C(158).FMT)
    ;
  @G(253) :
     @L(@VF(259).o, @C(158).DLC)
    ;
  @G(254) :
     @L(@VF(258).o, @C(158).PER)
    ;
  @G(161) :
     @L(@C(226).OR, @C(158).DATA)
    ;
  @G(11) :
     @L(@C(64).NE, @C(158).ENB)
    ;
  @G(1) :
     @L(@CP(2), @C(158).ID),
     @L(@CP(2), @C(64).IN1),
     @L(@VF(9).o, @CP(2))
    ;
  @G(12) :
     @L(@VF(7).o, @C(158).CH)
    ;
  @G(19) :
     @L(@VF(6).o, @C(18).IN)
    ;
  @G(20) :
     @L(@VF(4).o, @C(16).IN)
    ;
  @G(21) :
     @L(@VF(3).o, @C(15).IN)
    ;
  @G(22) :
     @L(@VF(5).o, @C(17).IN)
    ;
  @G(25) :
     @L(@C(18).TO_LWORD, @C(14).INbit)
    ;
  @G(26) :
     @L(@VF(24).o, @C(14).len)
    ;
  @G(27) :
     @L(@VF(23).o, @C(14).start)
    ;
  @G(28) :
     @L(@C(17).TO_LWORD, @C(13).INbit)
    ;
  @G(29) :
     @L(@VF(235).o, @C(13).len)
    ;
  @G(30) :
     @L(@VF(234).o, @C(13).start)
    ;
  @G(31) :
     @L(@C(16).TO_LWORD, @C(10).INbit)
    ;
  @G(32) :
     @L(@VF(233).o, @C(10).len)
    ;
  @G(33) :
     @L(@VF(232).o, @C(10).start)
    ;
  @G(34) :
     @L(@C(15).TO_LWORD, @C(8).INbit)
    ;
  @G(35) :
     @L(@VF(231).o, @C(8).len)
    ;
  @G(36) :
     @L(@VF(230).o, @C(8).start)
    ;
  @G(37) :
     @L(@C(8).OUTbit, @C(226).IN1)
    ;
  @G(38) :
     @L(@C(10).OUTbit, @C(226).IN2)
    ;
  @G(39) :
     @L(@C(13).OUTbit, @C(226).IN3)
    ;
  @G(40) :
     @L(@C(14).OUTbit, @C(226).IN4)
    ;
END_FUNCTION_BLOCK
