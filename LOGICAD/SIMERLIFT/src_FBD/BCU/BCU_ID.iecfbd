FUNCTION_BLOCK BCU_ID
  {
    height := 138;
    width := 290;
  }

  VAR
    TON1 : TON;
  END_VAR
  VAR_INPUT
    ADDR_BIT0 : BOOL;
    ADDR_BIT1 : BOOL;
    ADDR_BIT2 : BOOL;
  END_VAR
  VAR_OUTPUT
    PACK_ID : USINT;
    CAN_ID_10 : UDINT;
    CAN_ID_11 : UDINT;
    CAN_ID_12 : UDINT;
    CAN_ID_13 : UDINT;
    CAN_ID_14 : UDINT;
    CAN_ID_15 : UDINT;
    CAN_ID_16 : UDINT;
  END_VAR

  (*

    // Network 1:
    SEL(G := ADDR_BIT0, IN0 := 16#00, IN1 := 16#01, SEL => @C(10).SEL);
    SEL(G := ADDR_BIT1, IN0 := 16#00, IN1 := 16#02, SEL => @C(9).SEL);
    SEL(G := ADDR_BIT2, IN0 := 16#00, IN1 := 16#04, SEL => @C(11).SEL);
    ADD(IN1 := @C(10).SEL, IN2 := @C(9).SEL, IN3 := @C(11).SEL, ADD => PACK_ID);

    // Network 2:
    TON1(IN := 1, PT := T#1s);
    TO_UDINT(IN := TON1.Q, TO_UDINT => @C(36).TO_UDINT);
    ADD(IN1 := 16#18FF10F0, IN2 := PACK_ID, ADD => @C(26).ADD);
    MUL(IN1 := @C(36).TO_UDINT, IN2 := @C(26).ADD, MUL => CAN_ID_10);
    ADD(IN1 := 16#18FF11F0, IN2 := PACK_ID, ADD => @C(30).ADD);
    MUL(IN1 := @C(36).TO_UDINT, IN2 := @C(30).ADD, MUL => CAN_ID_11);
    ADD(IN1 := 16#18FF12F0, IN2 := PACK_ID, ADD => @C(38).ADD);
    MUL(IN1 := @C(36).TO_UDINT, IN2 := @C(38).ADD, MUL => CAN_ID_12);
    ADD(IN1 := 16#18FF13F0, IN2 := PACK_ID, ADD => @C(54).ADD);
    MUL(IN1 := @C(36).TO_UDINT, IN2 := @C(54).ADD, MUL => CAN_ID_13);
    ADD(IN1 := 16#18FF14F0, IN2 := PACK_ID, ADD => @C(25).ADD);
    MUL(IN1 := @C(36).TO_UDINT, IN2 := @C(25).ADD, MUL => CAN_ID_14);
    ADD(IN1 := 16#18FF15F0, IN2 := PACK_ID, ADD => @C(39).ADD);
    MUL(IN1 := @C(36).TO_UDINT, IN2 := @C(39).ADD, MUL => CAN_ID_15);
    ADD(IN1 := 16#18FF16F0, IN2 := PACK_ID, ADD => @C(67).ADD);
    MUL(IN1 := @C(36).TO_UDINT, IN2 := @C(67).ADD, MUL => CAN_ID_16);

  *)

  @VF(4) : @E(16#01), @R(330.0, 120.0, 90.0, 19.0), USINT;
  @C(7) : @F(ADD), @R(660.0, 120.0, 40.0, 58.0), USINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @I(@N(IN3), @L(49.5)), @O(@N(ADD), @R(9.5));
  @C(10) : @F(SEL), @R(470.0, 80.0, 120.0, 58.0), USINT, @I(@N(G), @L(9.5)), @I(@N(IN0), @L(29.5)), @I(@N(IN1), @L(49.5)), @O(@N(SEL), @R(9.5));
  @C(9) : @F(SEL), @R(470.0, 140.0, 120.0, 58.0), USINT, @I(@N(G), @L(9.5)), @I(@N(IN0), @L(29.5)), @I(@N(IN1), @L(49.5)), @O(@N(SEL), @R(9.5));
  @C(11) : @F(SEL), @R(470.0, 200.0, 120.0, 58.0), USINT, @I(@N(G), @L(9.5)), @I(@N(IN0), @L(29.5)), @I(@N(IN1), @L(49.5)), @O(@N(SEL), @R(9.5));
  @VF(1) : @E(ADDR_BIT0), @R(90.0, 80.0, 140.0, 19.0);
  @VF(14) : @E(16#00), @R(330.0, 100.0, 90.0, 19.0), USINT;
  @VF(17) : @E(ADDR_BIT1), @R(90.0, 140.0, 140.0, 19.0);
  @VF(19) : @E(16#02), @R(330.0, 180.0, 90.0, 19.0), USINT;
  @VF(21) : @E(16#04), @R(330.0, 240.0, 90.0, 19.0), USINT;
  @VF(5) : @E(ADDR_BIT2), @R(90.0, 200.0, 140.0, 19.0);
  @VF(23) : @E(PACK_ID), @R(790.0, 120.0, 140.0, 19.0);
  @VF(468) : @E(16#18FF10F0), @R(280.0, 330.0, 220.0, 19.0), UDINT;
  @VF(33) : @E(CAN_ID_10), @R(790.0, 310.0, 140.0, 19.0);
  @C(41) : @F(MUL), @R(690.0, 310.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MUL), @R(9.5));
  @C(36) : @F(TO_UDINT), @R(290.0, 310.0, 120.0, 18.0), BOOL, @I(@N(IN), @L(9.5)), @O(@N(TO_UDINT), @R(9.5));
  @C(43) : @FB(TON1), @R(160.0, 310.0, 100.0, 38.0), @I(@N(IN), @L(9.5)), @I(@N(PT), @L(29.5)), @O(@N(Q), @R(9.5)), @O(@N(ET), @R(29.5));
  @VF(46) : @E(1), @R(70.0, 310.0, 70.0, 19.0), BOOL;
  @VF(48) : @E(T#1s), @R(70.0, 330.0, 70.0, 19.0);
  @C(51) : @F(MUL), @R(690.0, 350.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MUL), @R(9.5));
  @VF(58) : @E(CAN_ID_11), @R(790.0, 350.0, 140.0, 19.0);
  @C(59) : @F(MUL), @R(690.0, 390.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MUL), @R(9.5));
  @VF(73) : @E(CAN_ID_12), @R(790.0, 390.0, 140.0, 19.0);
  @C(83) : @F(MUL), @R(690.0, 430.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MUL), @R(9.5));
  @VF(88) : @E(CAN_ID_13), @R(790.0, 430.0, 140.0, 19.0);
  @C(98) : @F(MUL), @R(690.0, 470.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MUL), @R(9.5));
  @VF(103) : @E(CAN_ID_14), @R(790.0, 470.0, 140.0, 19.0);
  @C(113) : @F(MUL), @R(690.0, 510.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MUL), @R(9.5));
  @VF(118) : @E(CAN_ID_15), @R(790.0, 510.0, 140.0, 19.0);
  @C(26) : @F(ADD), @R(580.0, 330.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @C(30) : @F(ADD), @R(580.0, 370.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @VF(32) : @E(16#18FF11F0), @R(280.0, 370.0, 220.0, 19.0), UDINT;
  @C(38) : @F(ADD), @R(580.0, 410.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @VF(40) : @E(16#18FF12F0), @R(280.0, 410.0, 220.0, 19.0), UDINT;
  @C(54) : @F(ADD), @R(580.0, 450.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @VF(56) : @E(16#18FF13F0), @R(280.0, 450.0, 220.0, 19.0), UDINT;
  @C(25) : @F(ADD), @R(580.0, 490.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @VF(28) : @E(16#18FF14F0), @R(280.0, 490.0, 220.0, 19.0), UDINT;
  @C(39) : @F(ADD), @R(580.0, 530.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @VF(42) : @E(16#18FF15F0), @R(280.0, 530.0, 220.0, 19.0), UDINT;
  @VF(64) : @E(PACK_ID), @R(360.0, 350.0, 140.0, 19.0);
  @C(67) : @F(ADD), @R(580.0, 570.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @VF(68) : @E(16#18FF16F0), @R(280.0, 570.0, 220.0, 19.0), UDINT;
  @C(70) : @F(MUL), @R(690.0, 550.0, 40.0, 38.0), UDINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MUL), @R(9.5));
  @VF(72) : @E(CAN_ID_16), @R(790.0, 550.0, 140.0, 19.0);
  @CP(16) : 439.5, 109.5;
  @CP(53) : 659.5, 319.5;
  @CP(66) : 539.5, 359.5;

  @G(8) :
     @L(@C(10).SEL, @C(7).IN1)
    ;
  @G(12) :
     @L(@C(9).SEL, @C(7).IN2)
    ;
  @G(13) :
     @L(@C(11).SEL, @C(7).IN3)
    ;
  @G(2) :
     @L(@VF(1).o, @C(10).G)
    ;
  @G(3) :
     @L(@VF(4).o, @C(10).IN1)
    ;
  @G(15) :
     @L(@VF(14).o, @CP(16)),
     @L(@CP(16), @C(10).IN0),
     @L(@CP(16), @C(9).IN0),
     @L(@CP(16), @C(11).IN0)
    ;
  @G(18) :
     @L(@VF(17).o, @C(9).G)
    ;
  @G(20) :
     @L(@VF(19).o, @C(9).IN1)
    ;
  @G(22) :
     @L(@VF(21).o, @C(11).IN1)
    ;
  @G(6) :
     @L(@VF(5).o, @C(11).G)
    ;
  @G(24) :
     @L(@C(7).ADD, @VF(23).i)
    ;
  @G(44) :
     @L(@C(43).Q, @C(36).IN)
    ;
  @G(45) :
     @L(@C(36).TO_UDINT, @CP(53)),
     @L(@CP(53), @C(41).IN1),
     @L(@CP(53), @C(51).IN1),
     @L(@CP(53), @C(59).IN1),
     @L(@CP(53), @C(83).IN1),
     @L(@CP(53), @C(98).IN1),
     @L(@CP(53), @C(113).IN1),
     @L(@CP(53), @C(70).IN1)
    ;
  @G(47) :
     @L(@VF(46).o, @C(43).IN)
    ;
  @G(49) :
     @L(@VF(48).o, @C(43).PT)
    ;
  @G(50) :
     @L(@C(41).MUL, @VF(33).i)
    ;
  @G(63) :
     @L(@C(51).MUL, @VF(58).i)
    ;
  @G(76) :
     @L(@C(59).MUL, @VF(73).i)
    ;
  @G(91) :
     @L(@C(83).MUL, @VF(88).i)
    ;
  @G(106) :
     @L(@C(98).MUL, @VF(103).i)
    ;
  @G(121) :
     @L(@C(113).MUL, @VF(118).i)
    ;
  @G(27) :
     @L(@VF(468).o, @C(26).IN1)
    ;
  @G(29) :
     @L(@C(26).ADD, @C(41).IN2)
    ;
  @G(35) :
     @L(@VF(32).o, @C(30).IN1)
    ;
  @G(37) :
     @L(@C(30).ADD, @C(51).IN2)
    ;
  @G(52) :
     @L(@VF(40).o, @C(38).IN1)
    ;
  @G(60) :
     @L(@VF(56).o, @C(54).IN1)
    ;
  @G(31) :
     @L(@VF(28).o, @C(25).IN1)
    ;
  @G(34) :
     @L(@C(25).ADD, @C(98).IN2)
    ;
  @G(55) :
     @L(@VF(42).o, @C(39).IN1)
    ;
  @G(57) :
     @L(@C(39).ADD, @C(113).IN2)
    ;
  @G(61) :
     @L(@C(54).ADD, @C(83).IN2)
    ;
  @G(62) :
     @L(@C(38).ADD, @C(59).IN2)
    ;
  @G(65) :
     @L(@VF(64).o, @CP(66)),
     @L(@CP(66), @C(26).IN2),
     @L(@CP(66), @C(30).IN2),
     @L(@CP(66), @C(38).IN2),
     @L(@CP(66), @C(54).IN2),
     @L(@CP(66), @C(25).IN2),
     @L(@CP(66), @C(39).IN2),
     @L(@CP(66), @C(67).IN2)
    ;
  @G(69) :
     @L(@VF(68).o, @C(67).IN1)
    ;
  @G(71) :
     @L(@C(67).ADD, @C(70).IN2)
    ;
  @G(74) :
     @L(@C(70).MUL, @VF(72).i)
    ;
END_FUNCTION_BLOCK
